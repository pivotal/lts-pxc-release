#!/bin/bash

set -e
set -o pipefail


export PXC_JOB_DIR=/var/vcap/jobs/pxc-mysql
LOG_DIR=/var/vcap/sys/log/pxc-mysql
LOG_FILE=$LOG_DIR/galera-init.log
JOB_INDEX=<%= index %>
CONFIG_FILE=$PXC_JOB_DIR/config/galera-init-config.yml
PXC_CTRL_PACKAGE=/var/vcap/packages/galera-init
PROC_NAME=pxc-ctl
RUN_DIR=/var/vcap/sys/run/$PROC_NAME
PIDFILE=$RUN_DIR/$PROC_NAME.pid

source /var/vcap/packages/pxc-utils/pid_utils.sh
source /var/vcap/packages/pxc-utils/logging.sh

output_to_logfiles ${LOG_DIR}

# add xtrabackup to path
export PATH=$PATH:/var/vcap/packages/percona-xtrabackup/bin

# add pxc binaries to path
export PATH=$PATH:/var/vcap/packages/pxc/bin

# add socat to path
export PATH=$PATH:/var/vcap/packages/socat/bin

ulimit -n <%= p('max_open_files') %>

if [[ ! -d "$RUN_DIR" ]]; then
  mkdir -p $RUN_DIR
fi
chown -R vcap:vcap $RUN_DIR

case $1 in

  # The start script must always exit 0 if there's a chance PXC could start successfully,
  # as if monit sees a pid for PXC but this script exited with error, it will assume
  # someone else started the process in the background.
  # This will latch the status to "Execution failed" until someone manually calls
  # monit unmonitor && monit monitor, at which point monit would find the pid and reset the status to 'running'

  start)
    # Ensure that if IPsec is present, it is running before we try to start
    set +e
    ipsec_path=$(ls /var/vcap/packages/strongswan*/sbin/ipsec | head -1)
    ipsec_monit_job=$(/var/vcap/bosh/bin/monit summary | grep ipsec)
    if [ -n "${ipsec_monit_job}" ]; then
      $ipsec_path status
      ipsec_status=$?

      if [ ${ipsec_status} -ne 0 ]; then
        echo "Exiting for restart because IPsec is present but not yet running"
        exit 1
      fi
    fi
    set -e

    # WORKAROUND: monit may attempt to run this script multiple times if mysqld does not start in time.
    # Ensure that running this script multiple times does not spawn multiple copies of _ctrl
    LAUNCHER_NAME=galera-init-launcher
    LAUNCHER_PID_FILE=$RUN_DIR/$LAUNCHER_NAME.pid
    pid_guard $LAUNCHER_PID_FILE $LAUNCHER_NAME

    echo "Checking for existing instance of $PROC_NAME"
    pid_guard $PIDFILE $PROC_NAME

    echo "start script: starting galera-init..."
    chpst -u vcap:vcap bash -c -o pipefail \
    "TMPDIR=/var/vcap/data/pxc-mysql/tmp PATH=$PATH PERL5LIB=$PERL5LIB $PXC_CTRL_PACKAGE/bin/galera-init \
             -configPath=$CONFIG_FILE \
             >> $LOG_FILE 2>&1" &

    echo $! > $LAUNCHER_PID_FILE

    echo "start script: completed starting galera-init."
    ;;

  stop)
    echo "stop script: stopping galera-init..."

    echo "stop script: stopping node $JOB_INDEX"
    kill_and_wait ${PIDFILE} 25 0

    echo "stop script: completed stopping galera-init"
    ;;

  *)
    echo "Usage: mysql_ctl {start|stop}"
    ;;

esac
